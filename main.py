import asyncio
import logging
import sqlite3
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command

from keyboard import keyboard, main_kb

with sqlite3.connect("new_db") as conn:
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            name TEXT NOT NULL,
            Date INTEGER
        )
    ''')
    # cursor.execute('create table if DATA_Table ('
    #                'id integer primary key,'
    #                'Date integer,'
    #                'Name string)')

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="8461067216:AAFtD-lVa56mzsg2QLKyL9KeVVlyZJSbKtw")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ö–∞–∫ –ø–æ–¥–∞–≤–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã?", reply_markup=keyboard)


# –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç!



@dp.message(F.text.lower() == "—Å –ø—é—Ä–µ—à–∫–æ–π")
async def with_puree(message: types.Message):
    await message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=main_kb)


@dp.message(F.text.lower() == "–±–µ–∑ –ø—é—Ä–µ—à–∫–∏")
async def without_puree(message: types.Message):
    await message.reply("–¢–∞–∫ –Ω–µ–≤–∫—É—Å–Ω–æ!")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ 1 —Å callback_data="button_1"
@dp.callback_query(F.data == "button_1")
async def handle_button_1(callback: types.CallbackQuery):
    await callback.message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 1! ‚úÖ")
    await callback.answer()  # –£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —É –∫–Ω–æ–ø–∫–∏

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ 2 —Å callback_data="button_2"
@dp.callback_query(F.data == "button_2")
async def handle_button_2(callback: types.CallbackQuery):
    await callback.message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 2! üîÑ")
    await callback.answer()  # –£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —É –∫–Ω–æ–ø–∫–∏

if __name__ == "__main__":
    asyncio.run(main())